Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/.idea/.gitignore	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: .idea/artifacts/LearningApp_jar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/artifacts/LearningApp_jar.xml b/.idea/artifacts/LearningApp_jar.xml
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/.idea/artifacts/LearningApp_jar.xml	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,8 @@
+<component name="ArtifactManager">
+  <artifact type="jar" build-on-make="true" name="LearningApp:jar">
+    <output-path>$PROJECT_DIR$/out/artifacts/LearningApp_jar</output-path>
+    <root id="archive" name="LearningApp.jar">
+      <element id="module-output" name="LearningApp" />
+    </root>
+  </artifact>
+</component>
\ No newline at end of file
Index: .idea/description.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/description.html b/.idea/description.html
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/.idea/description.html	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,1 @@
+<html>Simple <b>Java</b> application that includes a class with <code>main()</code> method</html>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/.idea/encodings.xml	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/.idea/misc.xml	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="EntryPointsManager">
+    <entry_points version="2.0" />
+  </component>
+  <component name="ProjectKey">
+    <option name="state" value="project://e2804f05-5315-4fc6-a121-c522a6c26470" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_16" project-jdk-name="17" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/.idea/modules.xml	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/LearningApp.iml" filepath="$PROJECT_DIR$/LearningApp.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/project-template.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/project-template.xml b/.idea/project-template.xml
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/.idea/project-template.xml	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,3 @@
+<template>
+  <input-field default="com.company">IJ_BASE_PACKAGE</input-field>
+</template>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/.idea/uiDesigner.xml	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/.idea/vcs.xml	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: LearningApp.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LearningApp.iml b/LearningApp.iml
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/LearningApp.iml	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: out/production/LearningApp/META-INF/MANIFEST.MF
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/LearningApp/META-INF/MANIFEST.MF b/out/production/LearningApp/META-INF/MANIFEST.MF
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/out/production/LearningApp/META-INF/MANIFEST.MF	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Main-Class: com.khoalt.PhoneBook.Main
+
Index: out/production/LearningApp/com/khoalt/bai1/intellij.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/LearningApp/com/khoalt/bai1/intellij.html b/out/production/LearningApp/com/khoalt/bai1/intellij.html
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/out/production/LearningApp/com/khoalt/bai1/intellij.html	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,10 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Title</title>
+</head>
+<body>
+
+</body>
+</html>
\ No newline at end of file
Index: src/META-INF/MANIFEST.MF
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/META-INF/MANIFEST.MF b/src/META-INF/MANIFEST.MF
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/META-INF/MANIFEST.MF	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Main-Class: com.khoalt.PhoneBook.Main
+
Index: src/com/khoalt/Circle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/Circle.java b/src/com/khoalt/Circle.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/Circle.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,37 @@
+package com.khoalt;
+
+public class Circle {
+    private double radius = 1;
+    private static int numberOfObject = 0;
+
+    public Circle() {
+        numberOfObject++;
+    }
+
+    public Circle(double newRadius) {
+        radius = newRadius;
+        numberOfObject++;
+    }
+
+    public double getRadius() {
+        return radius;
+    }
+
+    public void setRadius(double newRadius) {
+        radius = (newRadius >= 0) ? newRadius : 0;
+    }
+
+    public static int getNumberOfObject() {
+        return numberOfObject;
+    }
+
+    public double getArea() {
+        return radius * radius * Math.PI;
+    }
+
+    public static void main(String[] args) {
+        Circle myCircle = new Circle(5.0);
+        System.out.println("Radius is " + myCircle.radius);
+        System.out.println(myCircle.getRadius());
+    }
+}
Index: src/com/khoalt/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/Main.java b/src/com/khoalt/Main.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/Main.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,8 @@
+package com.khoalt;
+
+public class Main {
+
+    public static void main(String[] args) {
+	// write your code here
+    }
+}
Index: src/com/khoalt/OldEx/CreditCard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/OldEx/CreditCard.java b/src/com/khoalt/OldEx/CreditCard.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/OldEx/CreditCard.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,83 @@
+package com.khoalt.OldEx;
+
+import java.util.Scanner;
+
+class CreditCard {
+    public static void main(String[] args) {
+        Scanner keyboard = new Scanner(System.in);
+        System.out.println("Nhap card number: ");
+        long creditCard = keyboard.nextLong();
+        String result = isValid(creditCard) ? "Hop le" : "Khong hop le";
+        System.out.println(result);
+    }
+
+    static boolean isValid(long number){
+        return ((sumOfDoubleEvenPlace(number) + sumOfOddPlace(number)) % 10 == 0) && isRightPrefix(number) && (getSize(number) >= 13) && (getSize(number) <= 16);
+    }
+
+    static int sumOfDoubleEvenPlace(long number){
+        int temp = 0;
+        if (getSize(number) % 2 == 0){
+            for (int count = 0; count < getSize(number) / 2; count++){
+                int evenDigit = String.valueOf(number).charAt(count * 2) - '0';
+                temp = temp + getDigit(evenDigit);
+            }
+        }
+        else {
+            for (int count = 0; count < getSize(number) / 2; count++){
+                int evenDigit = String.valueOf(number).charAt(count * 2 + 1) - '0';
+                temp = temp + getDigit(evenDigit);
+            }
+        }
+        return temp;
+    }
+
+    static int getDigit(int number){
+        int doubleNumber = number * 2;
+        if (number > 4){
+            return doubleNumber % 10 + doubleNumber / 10;
+        }
+        else{
+            return doubleNumber;
+        }
+    }
+
+    static int sumOfOddPlace(long number){
+        int temp = 0;
+        if (getSize(number) % 2 == 0){
+            for (int count = 0; count < getSize(number) / 2; count++){
+                int oddDigit = String.valueOf(number).charAt(count * 2 + 1) - '0';
+                temp = temp + oddDigit;
+            }
+        }
+        else {
+            for (int count = 1; count < getSize(number) / 2; count++){
+                int oddDigit = String.valueOf(number).charAt(count * 2) - '0';
+                temp = temp + oddDigit;
+            }
+
+        }
+        return temp;
+    }
+
+    static int getSize(long number){
+        return String.valueOf(number).length();
+    }
+
+    static boolean isRightPrefix(long number){
+        int firstDigit = getPrefix(number, 1);
+        int first2Digits = getPrefix(number, 2);
+        return (firstDigit == 4) || (firstDigit == 5) || (firstDigit == 6) ||  (first2Digits == 37);
+    }
+
+    static int getPrefix(long number, int numberOfDigit){
+        String temp = "";
+        for (int count = 0; count < numberOfDigit; count++){
+            temp = temp + String.valueOf(number).charAt(count);
+        }
+        return Integer.valueOf(temp);
+    }
+
+
+
+}
Index: src/com/khoalt/OldEx/MonthCalendar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/OldEx/MonthCalendar.java b/src/com/khoalt/OldEx/MonthCalendar.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/OldEx/MonthCalendar.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,101 @@
+package com.khoalt.OldEx;
+
+import java.text.DateFormat;
+import java.text.DateFormatSymbols;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.Scanner;
+import java.util.SimpleTimeZone;
+
+public class MonthCalendar {
+
+
+    public static void main(String[] args) {
+        Scanner input = new Scanner(System.in);
+        System.out.print("Nhap nam: ");
+        int year = input.nextInt();
+        System.out.print("Nhap thang (1-12): ");
+        int month = input.nextInt();
+        printMonth(year, month);
+        input.nextLine();
+    }
+
+    public static void printMonth(int year, int month) {
+        printMonthTitle(year, month);
+        printMonthBody(year, month);
+    }
+
+    public static void printMonthTitle(int year, int month) {
+        String monthName = new DateFormatSymbols().getMonths()[month -1];
+        System.out.printf("%15s %-15d", monthName, year);
+        System.out.println();
+        System.out.println("-----------------------------");
+        System.out.println(" Sun Mon Tue Wed Thu Fri Sat ");
+    }
+
+    public static void printMonthBody(int year, int month) {
+            int count = getStartDay(year, month);
+            for (int i = 1; i <= getNumberOfDayInMonth(year, month); i++) {
+                if (i == 1) {
+                    int j = 0;
+                    while (j < count % 7 - 1) {
+                        System.out.print("    ");
+                        j++;
+                    }
+                    System.out.printf("%4d", i);
+                } else {
+                    System.out.printf("%4d", i);
+                }
+                if (count % 7 == 0) {
+                    System.out.println();
+                }
+                count++;
+            }
+    }
+
+    public static int getStartDay(int year, int month) {
+        int yearIndexOfCentury = year % 100;
+        int indexOfCentury = year / 100;
+        return (1 + 26 * (month + 1) / 10 + yearIndexOfCentury + yearIndexOfCentury / 4 + indexOfCentury / 4 + 5 * indexOfCentury) % 7;
+    }
+
+    public static int getNumberOfDayInMonth(int year, int month) {
+        int temp = 0;
+        switch (month) {
+            case 1: temp = 31;
+            break;
+            case 2: if (!isLeapYear(year)) {
+                    temp = 28;
+                } else {
+                    temp = 29;
+                }
+                break;
+            case 3: temp = 31;
+                break;
+            case 4: temp = 30;
+                break;
+            case 5: temp = 31;
+                break;
+            case 6: temp = 30;
+                break;
+            case 7: temp = 31;
+                break;
+            case 8: temp = 31;
+                break;
+            case 9: temp = 30;
+                break;
+            case 10: temp = 31;
+                break;
+            case 11: temp = 30;
+                break;
+            case 12: temp = 31;
+                break;
+        }
+        return temp;
+    }
+
+    public static boolean isLeapYear(int year) {
+        return ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);
+    }
+}
Index: src/com/khoalt/OldEx/PTB2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/OldEx/PTB2.java b/src/com/khoalt/OldEx/PTB2.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/OldEx/PTB2.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,29 @@
+package com.khoalt.OldEx;
+
+import java.util.Scanner;
+
+class PTB2 {
+    public static void main(String[] args) {
+        Scanner keyboard = new Scanner(System.in);
+        System.out.println("Nhap he so a b c: ");
+        double a = keyboard.nextInt();
+        keyboard.nextLine();
+        double b = keyboard.nextInt();
+        keyboard.nextLine();
+        double c = keyboard.nextInt();
+        keyboard.nextLine();
+        double delta = Math.pow(b, 2) - 4 * a * c;
+        if (delta < 0){
+            System.out.println("Phuong trinh vo nghiem");
+        }
+        else if (delta == 0){
+            double nghiem = (- b + Math.sqrt(delta)) / (2 * a);
+            System.out.println("Phuong trinh co 1 nghiem la: " + nghiem);
+        }
+        else{
+            double x1 = (- b + Math.sqrt(delta)) / (2 * a);
+            double x2 = (- b - Math.sqrt(delta)) / (2 * a);
+            System.out.println("Phuong trinh co 2 nghiem la: " + x1 + " va " + x2);
+        }
+    }
+}
Index: src/com/khoalt/OldEx/Palindrome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/OldEx/Palindrome.java b/src/com/khoalt/OldEx/Palindrome.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/OldEx/Palindrome.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,30 @@
+package com.khoalt.OldEx;
+
+import java.util.Scanner;
+
+class Palindrome {
+    public static void main(String[] args) {
+        Scanner keyboard = new Scanner(System.in);
+        System.out.println("Nhap so bat ky: ");
+        int number = keyboard.nextInt();
+        keyboard.nextLine();
+        int numberLength = String.valueOf(number).length();
+        boolean isPalindrome = true;
+
+        for (int count = 0; count < numberLength; count ++){
+            int firstDigit = getDigit(number, count);
+            int lastDigit = getDigit(number, numberLength - count - 1);
+            if (firstDigit != lastDigit){
+                isPalindrome = false;
+                break;
+            }
+        }
+
+        String result = isPalindrome ? "Palindrome" : "Not Palindrome";
+        System.out.println(result);
+    }
+
+    static int getDigit(int number, int index){
+        return String.valueOf(number).charAt(index);
+    }
+}
Index: src/com/khoalt/PhoneBook/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/PhoneBook/Main.java b/src/com/khoalt/PhoneBook/Main.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/PhoneBook/Main.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,183 @@
+package com.khoalt.PhoneBook;
+
+import java.util.ArrayList;
+import java.util.Scanner;
+
+public class Main {
+    static Scanner input = new Scanner(System.in);
+    static PhoneBook pb = new PhoneBook();
+
+    public static void main(String[] args) {
+        int choice;
+        do {
+            System.out.println("1. Them lien lac");
+            System.out.println("2. Sua lien lac");
+            System.out.println("3. Xoa lien lac");
+            System.out.println("4. Tim kiem lien lac");
+            System.out.println("5. Hien thi tat ca lien lac");
+            System.out.println("0. Thoat");
+            System.out.print("Chon: ");
+            choice = input.nextInt();
+            input.nextLine();
+            switch (choice) {
+                case 1: {
+                    Main.addContactScr();
+                    break;
+                }
+                case 2: {
+                    Main.modifyContactScr();
+                    break;
+                }
+                case 3: {
+                    Main.deleteContactScr();
+                    break;
+                }
+                case 4: {
+                    Main.findEntryScr();
+                    break;
+                }
+                case 5: {
+                    Main.showAllEntryScr();
+                }
+            }
+        } while (choice != 0);
+    }
+
+    public static void addContactScr() {
+        System.out.println("Nhap ten: ");
+        String contactName = input.nextLine();
+        System.out.println("Nhap so dien thoai: ");
+        String phoneNumber = input.nextLine();
+        PhoneEntry newEntry = new PhoneEntry(contactName, phoneNumber);
+        if (pb.addEntry(newEntry)) {
+            System.out.println("Them thanh cong");
+        } else {
+            System.out.println("Them khong thanh cong");
+        }
+    }
+
+
+    public static void modifyContactScr() {
+        int choice;
+        do {
+            System.out.println("1. Sua theo ten");
+            System.out.println("2. Sua theo so dien thoai");
+            System.out.println("0. Thoat");
+            System.out.print("Chon: ");
+            choice = input.nextInt();
+            input.nextLine();
+            switch (choice) {
+                case 1: {
+                    Main.modifyByNameScr();
+                    break;
+                }
+                case 2: {
+                    Main.modifyByNumberScr();
+                    break;
+                }
+            }
+        } while (choice != 0);
+    }
+
+    public static void modifyByNameScr() {
+        System.out.println("Nhap ten can sua: ");
+        String oldName = input.nextLine();
+        System.out.println("Nhap ten moi: ");
+        String newName = input.nextLine();
+        String result = pb.modifyEntryName(oldName, newName) ? "Sua thanh cong" : "Trung hoac khong ton tai";
+        System.out.println(result);
+    }
+
+    public static void modifyByNumberScr() {
+        System.out.println("Nhap so can sua: ");
+        String oldNumber = input.nextLine();
+        System.out.println("Nhap so moi: ");
+        String newNumber = input.nextLine();
+        String result = pb.modifyEntryNumber(oldNumber, newNumber) ? "Sua thanh cong" : "Trung hoac khong ton tai";
+        System.out.println(result);
+    }
+
+    public static void deleteContactScr() {
+        int choice;
+        do {
+            System.out.println("1. Xoa theo ten");
+            System.out.println("2. Xoa theo so dien thoai");
+            System.out.println("0. Thoat");
+            System.out.print("Chon: ");
+            choice = input.nextInt();
+            input.nextLine();
+            switch (choice) {
+                case 1: {
+                    Main.deleteByNameScr();
+                    break;
+                }
+                case 2: {
+                    Main.deleteByNumberScr();
+                    break;
+                }
+            }
+        } while (choice != 0);
+    }
+
+    public static void deleteByNameScr() {
+        System.out.println("Nhap ten cua lien he muon xoa: ");
+        String contacName = input.nextLine();
+        String result = pb.deleteEntryByName(contacName) ? "Xoa thanh cong" : "Khong ton tai lien he";
+        System.out.println(result);
+    }
+
+    public static void deleteByNumberScr() {
+        System.out.println("Nhap so dien thoai muon xoa: ");
+        String phoneNumber = input.nextLine();
+        String result = pb.deleteEntryByNumber(phoneNumber) ? "Xoa thanh cong" : "Khong ton tai lien he";
+        System.out.println(result);
+    }
+
+    public static void findEntryScr() {
+        int choice;
+        do {
+            System.out.println("1. Tim theo ten");
+            System.out.println("2. Tim theo so dien thoai");
+            System.out.println("0. Thoat");
+            System.out.print("Chon: ");
+            choice = input.nextInt();
+            input.nextLine();
+            switch (choice) {
+                case 1: {
+                    Main.findByNameScr();
+                    break;
+                }
+                case 2: {
+                    Main.findByNumberScr();
+                    break;
+                }
+            }
+        } while (choice != 0);
+    }
+
+    public static void findByNameScr() {
+        System.out.println("Nhap ten: ");
+        String contactName = input.nextLine();
+        PhoneEntry entry = pb.findEntryByName(contactName);
+        if (entry != null) {
+            System.out.println(entry);
+        } else {
+            System.out.println("Khong ton tai");
+        }
+    }
+
+    public static void findByNumberScr() {
+        System.out.println("Nhap so dien thoai: ");
+        String phoneNumber = input.nextLine();
+        PhoneEntry entry = pb.findEntryByNumber(phoneNumber);
+        if (entry != null) {
+            System.out.println(entry);
+        } else {
+            System.out.println("Khong ton tai");
+        }
+    }
+
+    public static void showAllEntryScr() {
+        System.out.println(pb);
+    }
+}
Index: src/com/khoalt/PhoneBook/PhoneBook.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/PhoneBook/PhoneBook.java b/src/com/khoalt/PhoneBook/PhoneBook.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/PhoneBook/PhoneBook.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,120 @@
+package com.khoalt.PhoneBook;
+
+import java.sql.Array;
+
+class PhoneBook {
+    private String phoneBookName;
+    PhoneEntry[] phoneEntries = new PhoneEntry[2];
+    int numberOfEntries = 0;
+
+    public int getNumberOfEntries() {
+        return this.numberOfEntries;
+    }
+
+    public boolean addEntry(PhoneEntry entry) {
+        int capacity = phoneEntries.length;
+        if (this.numberOfEntries == capacity) {
+            PhoneEntry[] newPhoneEntries = new PhoneEntry[capacity * 2];
+            System.arraycopy(phoneEntries, 0, newPhoneEntries, 0, capacity);
+            this.phoneEntries = newPhoneEntries;
+        }
+        if (isDuplicateName(entry.getContactName()) || isDuplicateNumber(entry.getPhoneNumber())) return false;
+        this.phoneEntries[this.numberOfEntries] = entry;
+        this.numberOfEntries = this.numberOfEntries + 1;
+        return true;
+    }
+
+    public boolean modifyEntryName(String oldName, String newName) {
+        if (isDuplicateName(newName)) {
+            return false;
+        }
+        for (int i = 0; i < this.numberOfEntries; i++) {
+            if (this.phoneEntries[i].getContactName().equals(oldName)) {
+                this.phoneEntries[i].setContactName(newName);
+                return true;
+            }
+        }
+        return false;
+    }
+
+    public boolean modifyEntryNumber(String oldNumber, String newNumber) {
+        if (isDuplicateNumber(newNumber)) {
+            return false;
+        }
+        for (int i = 0; i < this.numberOfEntries; i++) {
+            if (this.phoneEntries[i].getPhoneNumber().equals(oldNumber)) {
+                this.phoneEntries[i].setContactName(newNumber);
+                return true;
+            }
+        }
+        return false;
+    }
+
+    public boolean deleteEntryByName(String contactName) {
+        PhoneEntry selectedEntry = findEntryByName(contactName);
+        for (int i = 0; i < this.numberOfEntries; i++) {
+            if (this.phoneEntries[i].equals(selectedEntry)) {
+                removeElement(this.phoneEntries, i);
+                return true;
+            }
+        }
+        return false;
+    }
+
+    public boolean deleteEntryByNumber(String phoneNumber) {
+        PhoneEntry selectedEntry = findEntryByNumber(phoneNumber);
+        for (int i = 0; i < this.numberOfEntries; i++) {
+            if (this.phoneEntries[i].equals(selectedEntry)) {
+                removeElement(this.phoneEntries, i);
+                --this.numberOfEntries;
+                return true;
+            }
+        }
+        return false;
+    }
+
+    public void removeElement(Object[] array, int index) {
+        System.arraycopy(array, index + 1, array, index, array.length - 1 - index);
+    }
+
+
+    public PhoneEntry findEntryByName(String contactName) {
+        for (int i = 0; i < this.numberOfEntries; i++) {
+            if (!this.phoneEntries[i].getContactName().equals(contactName)) continue;
+            return this.phoneEntries[i];
+        }
+        return null;
+    }
+
+    public PhoneEntry findEntryByNumber(String phoneNumber) {
+        for (int i = 0; i < this.numberOfEntries; i++) {
+            if (!this.phoneEntries[i].getPhoneNumber().equals(phoneNumber)) continue;
+            return this.phoneEntries[i];
+        }
+        return null;
+    }
+
+    public boolean isDuplicateName(String contactName) {
+        for (int i = 0; i < this.numberOfEntries; i++) {
+            if (!this.phoneEntries[i].getContactName().equals(contactName)) continue;
+            return true;
+        }
+        return false;
+    }
+
+    public boolean isDuplicateNumber(String phoneNumber) {
+        for (int i = 0; i < this.numberOfEntries; i++) {
+            if (!this.phoneEntries[i].getPhoneNumber().equals(phoneNumber)) continue;
+            return true;
+        }
+        return false;
+    }
+
+    public String toString() {
+        String result = "So lien lac hien co: " + this.numberOfEntries + "\n";
+        for (int i = 0; i < this.numberOfEntries; i++) {
+            result = result + this.phoneEntries[i].toString() + "\n";
+        }
+        return result;
+    }
+}
\ No newline at end of file
Index: src/com/khoalt/PhoneBook/PhoneEntry.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/PhoneBook/PhoneEntry.java b/src/com/khoalt/PhoneBook/PhoneEntry.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/PhoneBook/PhoneEntry.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,34 @@
+package com.khoalt.PhoneBook;
+
+public class PhoneEntry {
+    private String phoneNumber;
+    private String contactName;
+
+    public PhoneEntry() {
+    }
+
+    public PhoneEntry(String contactName, String phoneNumber){
+        this.contactName = contactName;
+        this.phoneNumber = phoneNumber;
+    }
+
+    public String getContactName(){
+        return contactName;
+    }
+
+    public String getPhoneNumber(){
+        return phoneNumber;
+    }
+
+    public void setContactName(String contactName){
+        this.contactName = contactName;
+    }
+
+    public void setPhoneNumber(String phoneNumber){
+        this.phoneNumber = phoneNumber;
+    }
+
+    public String toString() {
+        return "Ten: " + this.contactName + "\t" + "So dien thoai: " + this.phoneNumber;
+    }
+}
Index: src/com/khoalt/SingDimArray/AssignGrades.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/SingDimArray/AssignGrades.java b/src/com/khoalt/SingDimArray/AssignGrades.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/SingDimArray/AssignGrades.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,50 @@
+package com.khoalt.SingDimArray;
+
+import java.util.Scanner;
+
+public class AssignGrades {
+    static Scanner input = new Scanner(System.in);
+
+    public static void main(String[] args) {
+        System.out.print("Enter the number of students: ");
+        int number = input.nextInt();
+        int[] grades = new int[number];
+        System.out.print("Enter " + number + " scores: ");
+        for (int i = 0; i < number; i++) {
+            grades[i] = input.nextInt();
+        }
+        printResult(grades);
+    }
+
+    static void printResult(int[] grades) {
+        for (int i = 0; i < grades.length; i++) {
+            System.out.println("Student " + i + " score is " + grades[i] + " and grade is " + ranking(grades, grades[i]));
+        }
+    }
+
+    static int getBestStudent(int[] grades) {
+        int bestStudent = 0;
+        for (int i = 0; i < grades.length; i++) {
+            if (grades[bestStudent] < grades[i]) {
+                bestStudent = i;
+            }
+        }
+        return bestStudent;
+    }
+
+    static String ranking(int[] grades, int grade) {
+        int bestStudent = getBestStudent(grades);
+        int diff = grades[bestStudent] - grade;
+        if (diff <= 5) {
+            return "A";
+        } else if (diff <= 10) {
+            return "B";
+        } else if (diff <= 15) {
+            return "C";
+        } else if (diff <= 20) {
+            return "D";
+        } else {
+            return "F";
+        }
+    }
+}
Index: src/com/khoalt/SingDimArray/BubbleSort.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/SingDimArray/BubbleSort.java b/src/com/khoalt/SingDimArray/BubbleSort.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/SingDimArray/BubbleSort.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,31 @@
+package com.khoalt.SingDimArray;
+
+import java.util.Arrays;
+import java.util.Scanner;
+
+public class BubbleSort {
+    static Scanner input = new Scanner(System.in);
+
+    public static void main(String[] args) {
+        double[] list = new double[10];
+        System.out.println("Nhap 10 so: ");
+        for (int i = 0; i < 10; i++) {
+            list[i] = input.nextDouble();
+        }
+        bubleSort(list);
+        System.out.println(Arrays.toString(list));
+    }
+
+    static void bubleSort(double[] list) {
+        double temp = 0;
+        for (int j = 0; j < 10; j++) {
+            for (int i = 0; i < list.length - 1; i++) {
+                if (list[i] > list[i + 1]) {
+                    temp = list[i];
+                    list[i] = list[i + 1];
+                    list[i + 1] = temp;
+                }
+            }
+        }
+    }
+}
Index: src/com/khoalt/SingDimArray/CountOcc.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/SingDimArray/CountOcc.java b/src/com/khoalt/SingDimArray/CountOcc.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/SingDimArray/CountOcc.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,49 @@
+package com.khoalt.SingDimArray;
+
+import java.lang.reflect.Array;
+import java.util.Arrays;
+import java.util.Scanner;
+
+public class CountOcc {
+    static Scanner input = new Scanner(System.in);
+
+    public static void main(String[] args) {
+        System.out.print("Enter the integers between 1 and 50: ");
+        int[] numberList = new int[1];
+        for (int i = 0; i < numberList.length; i++) {
+            numberList[i] = input.nextInt();
+            if (numberList[i] == 0) {
+                break;
+            } else {
+                int[] temp = new int[numberList.length + 1];
+                System.arraycopy(numberList, 0, temp, 0, numberList.length);
+                numberList = temp;
+            }
+        }
+        countOcc(numberList);
+    }
+
+    static void countOcc(int[] numberList) {
+        Arrays.sort(numberList);
+        int occ = 0;
+        int currentNumber = numberList[1];
+        for (int i = 1; i < numberList.length; i++) {
+            if (currentNumber == numberList[i]) {
+                occ++;
+            } else {
+                printOcc(currentNumber, occ);
+                currentNumber = numberList[i];
+                occ = 1;
+            }
+        }
+        printOcc(currentNumber, occ);
+    }
+
+    static void printOcc(int number, int occ) {
+        if (occ > 1) {
+            System.out.println(number + " occurs " + occ + " times");
+        } else {
+            System.out.println(number + " occurs " + occ + " time");
+        }
+    }
+}
Index: src/com/khoalt/Test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/Test.java b/src/com/khoalt/Test.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/Test.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,18 @@
+package com.khoalt;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Scanner;
+
+public class Test {
+    public static void main(String[] args) {
+        Scanner input = new Scanner(System.in);
+        System.out.print("Nhap vao 1 so nguyen: ");
+        int soNguyen = input.nextInt();
+        if (soNguyen >= 0) {
+            System.out.println("Day la so nguyen duong.");
+        } else {
+            System.out.println("Day la so nguyen am.");
+        }
+    }
+}
Index: src/com/khoalt/bai1/Ex1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/bai1/Ex1.java b/src/com/khoalt/bai1/Ex1.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/bai1/Ex1.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,16 @@
+package com.khoalt.bai1;
+
+
+import java.util.Scanner;
+
+public class Ex1 {
+
+    public static void main(String[] args) {
+        Scanner input = new Scanner(System.in);
+        System.out.println("enter an integer");
+        int myint = input.nextInt();
+        input.nextLine();
+        String str = input.nextLine();
+        System.out.println(myint);
+    }
+}
Index: src/com/khoalt/bai1/IMEICheck.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/bai1/IMEICheck.java b/src/com/khoalt/bai1/IMEICheck.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/bai1/IMEICheck.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,32 @@
+package com.khoalt.bai1;
+
+import java.util.Scanner;
+
+public class IMEICheck {
+    public static void main(String[] args) {
+        Scanner input = new Scanner(System.in);
+        System.out.print("Nhap IMEI: ");
+        String imei = input.nextLine();
+        if (imei.length() == 18 && imei.charAt(2) == imei.charAt(9) && imei.charAt(9) == imei.charAt(16) && imei.charAt(9) == '-') {
+            String imeiPart1, imeiPart2, imeiPart3, imeiPart4;
+            imeiPart1 = imei.substring(0, 2);
+            imeiPart2 = imei.substring(3, 9);
+            imeiPart3 = imei.substring(10, 16);
+            imeiPart4 = imei.substring(17, 18);
+            if (isNumeric(imeiPart1) && isNumeric(imeiPart2) && isNumeric(imeiPart3) && isNumeric(imeiPart4)) {
+                System.out.println(imei + " is a valid IMEI");
+            } else {
+                System.out.println(imei + " is not a valid IMEI");
+            }
+        } else {
+            System.out.println(imei + " is not a valid IMEI");
+        }
+    }
+
+    public static boolean isNumeric(String string) {
+        for (char c : string.toCharArray()) {
+            if (!Character.isDigit(c)) return false;
+        }
+        return true;
+    }
+}
Index: src/com/khoalt/bai1/SortArray.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/bai1/SortArray.java b/src/com/khoalt/bai1/SortArray.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/bai1/SortArray.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,31 @@
+package com.khoalt.bai1;
+
+import java.util.Arrays;
+import java.util.Scanner;
+
+public class SortArray {
+    static Scanner input = new Scanner(System.in);
+    static int[] numberList = new int[10];
+
+    public static void main(String[] args) {
+        System.out.print("Nhap 10 so tu nhien: ");
+        for (int i = 0; i < 10; i++) {
+            numberList[i] = input.nextInt();
+        }
+        int temp = 0;
+        int startIndex = 0;
+        while (startIndex < 10) {
+            for (int i = startIndex; i < 10; i++) {
+                int min = numberList[startIndex];
+                if (min >= numberList[i]) {
+                    min = numberList[i];
+                    temp = numberList[startIndex];
+                    numberList[startIndex] = numberList[i];
+                    numberList[i] = temp;
+                }
+            }
+            startIndex++;
+        }
+        System.out.print(Arrays.toString(numberList));
+    }
+}
Index: src/com/khoalt/bai1/intellij.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/bai1/intellij.html b/src/com/khoalt/bai1/intellij.html
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/bai1/intellij.html	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,10 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Title</title>
+</head>
+<body>
+
+</body>
+</html>
\ No newline at end of file
Index: src/com/khoalt/doItAgain/StopWatch.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/khoalt/doItAgain/StopWatch.java b/src/com/khoalt/doItAgain/StopWatch.java
new file mode 100644
--- /dev/null	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
+++ b/src/com/khoalt/doItAgain/StopWatch.java	(revision b08fb54c3b12a760cb1468d179082ef781f2bd36)
@@ -0,0 +1,41 @@
+package com.khoalt.doItAgain;
+
+import java.time.LocalDateTime;
+import java.util.Scanner;
+import java.util.Date;
+
+class StopWatch {
+    private static long startTime, endTime;
+
+    public static void main(String[] args) {
+        Scanner input = new Scanner(System.in);
+        System.out.println("Press Enter to start");
+        input.nextLine();
+        start();
+        System.out.println("Press Enter to end");
+        input.nextLine();
+        end();
+        System.out.println(getElapsedTime());
+    }
+
+    public long getEndTime() {
+        return endTime;
+    }
+
+    public long getStartTime() {
+        return startTime;
+    }
+
+    public static void start() {
+        startTime = System.currentTimeMillis();
+    }
+
+    public static void end() {
+        endTime = System.currentTimeMillis();
+    }
+
+    public static long getElapsedTime() {
+        return endTime - startTime;
+    }
+
+}
diff --git a/src/com/khoalt/OldEx/RockPaperScissor.java b/src/com/khoalt/OldEx/RockPaperScissor.java
new file mode 100644
diff --git a/out/artifacts/LearningApp_jar/LearningApp.jar b/out/artifacts/LearningApp_jar/LearningApp.jar
new file mode 100644
index 0000000000000000000000000000000000000000..fb47e78863556a6e525a72bd79964b190ea1d694
GIT binary patch
literal 21570
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
P|K_K7bIn8=ZvFZTah;fH

diff --git a/out/production/LearningApp/com/khoalt/Circle.class b/out/production/LearningApp/com/khoalt/Circle.class
new file mode 100644
index 0000000000000000000000000000000000000000..5b6a75742e0be595986ff08eaa33c65a0206c57c
GIT binary patch
literal 1732
zc$|$??QRoC6g?9=UfXOO=bNMi5=ffFe3+JxLY>lpO-PE9P#mSI_`_r~#EaLv*6x@p
zPXbaOfImp6v<(tSJV0Lw3Ai)6u}xx7z4FY?ojd2AbMM^!@57sS02XmSjUL1d#7*=f
z!H|8-pYXiH-QE1g_G4j5hQy-n+VTcNY<^)Yg(Ol2(k70<WEil#dcIcmxFhpL+qWD+
z{yyKan*jqWDesJleq<RkZnM5E{EbHkxNOzHAlcgy*SM@EmQvI2H%sS_Czghxe`x|a
zuIP<3#OF(j!#6l#VA8}%ocfG%WiODTPE5Tf1sEyo9ox&_^KDmFq%U~AFi4QoCQjoF
z!&sfyMA36CE`PISmEHo$T}j+WC{VcrSQ5f+A&pslYhcdAJQf&+y5KVy4YhJy1#%Q(
zVN2;bYvLTvGo*HfydR~D(pypi@(NvPEqXhY&i=CPiglg4O}?!XJXrQD?rd@2R_n+Z
zmsOiUhRR1OQlK!d_~Rf<Drkr7t4MCu)_5ZV86Z0Ahss2>R!J1?+$4PzsLpNDHah>H
zn>gC%{;nd@Wt$;c-#fS_$wkYFE>^nYHGNAg+sb|{bhw~SQ*m#3o(!bV8*4&Vy`7*x
zf!k>;<Bow9RYl@9(+*_2PrRCl;)R7>=9cvQJ%(qU)rcHJ&=v0PI3k!SdtR;CC>$mJ
zrGuM$4bjEDQ+k-j!opFAB6pmMEkz-TyCgfT$&?*TF$Qzhb%kGaco2xdz&gY1|Ke`o
z9>dA6yHbaS&X}f~*hB5mLl3pH?ltOFnv-DadqCqwTCE^PZ@^&gHCV3yUl^~@7k~IS
z`u@_Vzf*gN(?}l@dQ{sF(D*%B%<v>G;WEt%bv#0SK&UaA$6BblxvtQobO=N+gf@{u
zAK5Y*epCw>i{RDU6&;eP{)z(S$w!gs&HV%8WeYZ;jRPGlds{58wpdzZRV=f)xy;i)
zVaz>8JVP`Uy_m*HYYHQjxzP?v*%qa2MCk|Z)pOTC@}nX_b1WKDxQ6Rdz!RDZ5T``E
z&}7<V6{#Ovx~@?^lr^Jtsef%4L$$*KCp!dYB2p<7=-VHn2trYWXWt_E`!GgcW32oN
z6K4tU4W@v7%&6r)a{IV&xZcxLmeZKP8O+erRzHiMa6=bu0zXqoYIiKP?$cx>u{Rdg
exl^M`_e~w<7K+hTEYbfLly$Nh*06zJG5!hq&{uQ-

diff --git a/out/production/LearningApp/com/khoalt/Main.class b/out/production/LearningApp/com/khoalt/Main.class
new file mode 100644
index 0000000000000000000000000000000000000000..a51a8a4a34b92f6ba047c810ea17f3b6975d7275
GIT binary patch
literal 377
zc${reK~BRk5F9sYLPDXmMclcyAmInJ;)28}z@aD?PEN2=m&BHg%fC1wao_<w3b8ho
zK!7FhXm@6Iy?+0AeFLz-VU8Z66!8FkBn$^@@g#UFbi;3|wX7XOvQS#NbB1U-D^u(+
z3~STzhm{en<5xmyhWNtVOCk!T<@Khkq`ehYOO<h9YSEU$DxYtQv0JG}hEegW&zz_(
z^gEi~72hveI;(UupOwT5+mLng56zG-&BoU9Qu!g7?|9}_I7Uia`qKmRds56O<AjW`
sfARwM9O#^45{eOaDGt5_gnNV;_A%U=Pw9H@k1_pWqz}a?;5euzpJD|@KmY&$

diff --git a/out/production/LearningApp/com/khoalt/OldEx/CreditCard.class b/out/production/LearningApp/com/khoalt/OldEx/CreditCard.class
new file mode 100644
index 0000000000000000000000000000000000000000..0299c2c8f492f005fb4b57d6019c7c889070aaac
GIT binary patch
literal 3030
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
a;`BO}6?X!!^7l60Rgnn1hxhRz`u+g|L4N%J

diff --git a/out/production/LearningApp/com/khoalt/OldEx/MonthCalendar.class b/out/production/LearningApp/com/khoalt/OldEx/MonthCalendar.class
new file mode 100644
index 0000000000000000000000000000000000000000..0fddca401258733e069c6f8cc60a3897cf902fdc
GIT binary patch
literal 2693
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

diff --git a/out/production/LearningApp/com/khoalt/OldEx/PTB2.class b/out/production/LearningApp/com/khoalt/OldEx/PTB2.class
new file mode 100644
index 0000000000000000000000000000000000000000..810ec5a64c3913f5745b0a63253a809e86cf3311
GIT binary patch
literal 1822
zc$|$?ZExFD6n^fK#cArLZPK*qfMQq+Ne9bX#-L4s(Pr(!(icc+87(h2j!C>YzQMlf
z+HXi8@fA&zn9#mXNPJ_0Z7LE!fFA{%>ttF>0>YB7kB^`8+~=HoeE#_J=yw2%sKsy!
zAq`<2rx9TozRCA_&f#t?w^6xinUW#0XuGz2n<13RZfl4#j0B*zw4Gep<gROZ1BhWz
zgRbKY;wM<jhrYC$45w_DAyo=K*dkYSTWwjEp2eH_7&Hv4{YMzmnZA(hw%Q@7V-zV8
zBHHpe*`{Z^PmocJGbGmQyk*oa!xsiODu%gW#4v%g8lKVdES_UX_K9WCTI$VFO1nBb
zIY@HXNQ6@Qybc2|5Z1L0WYLvDU5e_<IUQ4&W{9dUCEK+aMl;!7p2!t+t{AeI(QsbJ
zD|nS5{uH^!Wu1sy;ugc{Orel1M6L{Xf})sZ7~8D3g<CTeVcpmlhFh!KR#OqarsEP`
zX9)XWdL%BKq2L6?y`kex%rlHPdBa*3uF2(&E$d|YlDpDZIT!k<O@JY<Vi##!C8Zal
zfx07Qie|1+7u=D#4X1kbAh)@-G)DrKMU^Tsqzba$ZdNRBi&q@-Buc{M&NlaK_1<-c
zW!)wz<E6fAc>*-K>ZGyEZodPfZtYZpffcCf4rbM&RB*3GyvaUMbYKnZup+ouB|xdC
zw+X;F-4(h`I*zL4NP0h0mfUQt@m8Q*!*zyOS+qUVTCr6o14{4(#YX?bk`U6D9&fE#
zvM#FrPy`>va04G}*j2UNW0-m>%y#!h!|Lkm9MuXprSJ|J?jCQ<F0ey-jk{IH@~28d
zG}^6vZ=(MexOLdF`oNEusxu4n*<Ole?l@&zTJ+<6$}oANFHK?0c01E>_=3Tr_?+R~
zKQVJBFvdPN7=vC^wO@9)?_0hGD*W{S%3A}~e)7Me)FmA-{mF09{8N`&X#!HSze84z
zo=kaW9)bNFd{#egq~pZ9wCY`Z3Cr{xKmk`f!R$8S;^h1FH)uB=VBiro{{tivV-Jx&
z{}7Yk7HNHPCot#3$LvU8r^BOo=`k{+xR7b2BaPa8G#!oKy@$9Wxkw~GVvjuE|A47<
z_*Odl7;`3tWEx^VMv!#u2$z8Xcc};P#8K-y^dKUwA7LSgQOSmaWY>|TRl^{SoFpYU
zLGx;o-li$_8JhF6l;mX$p@?B@Vg$Q{s?dP;k-}FP!`DdT4n^I^S^Pp%R~2oKczlXo
z!78!cq55A7tos4aDlt>p@E)$ya}YnFgf%Ma1n!ZVRXT)ee1{FP!nFH0wCgIBx(EmF
zlNH4W6qQ2gFOm|`P}ZP@=mK88NGWXvr}!bZ=@}<$hloE3*3ZC$Va!N=6<=WDZwUXa
A6#xJL

diff --git a/out/production/LearningApp/com/khoalt/OldEx/Palindrome.class b/out/production/LearningApp/com/khoalt/OldEx/Palindrome.class
new file mode 100644
index 0000000000000000000000000000000000000000..0ce3663cb0db73251f68c4f3d4da785a04358af4
GIT binary patch
literal 1434
zc$|Gx+j84f6kR8lEXz@DPMxNW4d#+!C$wt07;=R)O@qNrLR}JWFUPiGtC6LQEO(N3
zeu5`vc*zSd?L*orGkgFaz{l`FSw~JuOAVUQIs0s_z4qFB>-_%L)87CrV=s*%Bn)U4
zbR-4F@5=|$_N3pkx9j(vMkJ72c6~Qm6-X3Iy9QDM6EUb4xt?8XNZ)rt6KM<^uq=#V
z^d*+saW`^00z<AZkgdia+`z8*hrOs4g^uhjrD0%P<)09kE)Im0c2$N+3m1^3kf0a6
zNVXHY{&Qps7ny&nEe{Lbpiq}l;ox|&kj5okHZWr$hrGb#fJg!3P@O!b^Grp*f{5-G
zB`BS*TPWZSVtwZ*s`yddm5TcEmW8)5E09uOs;=({Tqu@a<w@fm6b+Ot%whiJR>c5v
zKagI}+1^(=D*wT7)xtHUBk4JQD{7~49XAZTXW@N(ATZMiI`%<3kX~eOd(Dj_dq;Y%
z-wcBeWu;n9bjxkI6t5R6l~N^zvOxMAlETLVqgz2#IQOZfix!r!%%qLB4A&U0QQtbZ
z^`J@KF;(?euTyuzd$R7)lc@#`>FvtURp&FO7PZ~3K)(7vB9{p3NcGE16~7xa3+ml>
z!|wAsL`A^#<UeP<5%kn>G#R#-YjOYw`*7eK*8>?g38=pEOB0av<6;D?zEO>P&7<3W
zv7h2wLPMw9^CDI9fJ`H`NHz}c$iuh=2B=nNxO2oZYC$h-IJaHZnz3`*Yl?>d+I8Mf
z^(6T6hC*P4md#x#&)j2(hct$;$~D<{;uEgcnf)o&xSP0%^?tC}Bw32S;8z&mJc9X{
zlY4|rX6h8v^QU-ih0B|JxhJ@Cig#DFvX&_8Sv~(V=5ks63G8w*m(S`=t*LAyo6H(N
z!Az936PQ2f;^f&MS?x!pG9R8m&wR9~llqcQ>W6U^O6E<Bb2Ttb8IzPY&AXlFX_lgk
z7{v{YVS$(pOrVMkwu!n+|JS&PeWHEdW>w<%j9s98i^wG35!~i#U>;YoNlRBn;xkmZ
z52K0C@daBjjXkn%uw}FK+@Y0V)=g|Nk4AnIJNS~ZcNvv~{)}`<12qGN-~(Lw6S}!(
t@IIu}Z9ALD3i;He%**WC%qbRr`PWo(vE->fC>DU&x<^Y5^Q#!Y`!^n~Evf(j

diff --git a/out/production/LearningApp/com/khoalt/PhoneBook/Main.class b/out/production/LearningApp/com/khoalt/PhoneBook/Main.class
new file mode 100644
index 0000000000000000000000000000000000000000..dc636b7f273f8b5fd21788088640e7bcdd51b122
GIT binary patch
literal 4662
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
F{y#2U91s8i

diff --git a/out/production/LearningApp/com/khoalt/PhoneBook/PhoneBook.class b/out/production/LearningApp/com/khoalt/PhoneBook/PhoneBook.class
new file mode 100644
index 0000000000000000000000000000000000000000..1dcb20d74abdb409f84711bb5beb71209c8300e1
GIT binary patch
literal 3896
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
T7P#YHZ7jLkg7)v@Q|$d8>QggM

diff --git a/out/production/LearningApp/com/khoalt/PhoneBook/PhoneEntry.class b/out/production/LearningApp/com/khoalt/PhoneBook/PhoneEntry.class
new file mode 100644
index 0000000000000000000000000000000000000000..309f0ef81efb5b420f0c1af8e931b1bb8baec7ab
GIT binary patch
literal 1488
zc$|%tZBNrs6vzK}jCIe&$)f@e1sMaG4{wMNUbsj!nMkq)V|;b#Zdh5@yR;V)zKI`0
z6Nw2g`~ZF^<GF3!a1<rWdQNZ8`JIQJ)1SXCe*oCQ^DGh=Gmy+<94Us06Mn{P4tI}h
z?~hJ|r5I8>wri_hhOx@pVFqbr3}o}jA<yu@lD%5DBe|n$2Oa5(S5kIE?X|1CbB3HH
zUBxZ6&wGNQ)EM%c%Cp_$ZA~oZVQO5iuRZrqdq=`6QGR#wDB&){OpkX(UAh)mA8gej
z%~#x2KEqb!I`R6++VvxbWL>r?C9`4w3EARDPLQOuxO2!oTi-{AN!76_-csW~6%%;%
zb~zm~6pw|fU+vFiB{o%UcQ9-X9rz=TQ!z1v2>ys?TFLM+L$)bTJxlD_x;}GQ!lowC
zC{Sg}S03-b6RIQIzL~;G7LT!NprT*Q8pHB1sO_G~u83lX?`n_IlX?g~U(GHu454qh
z+jfM%+@LO=_G8*~lVj_=FJjC;HAV;cua_So>fCXfwi4TEtkZP0g!{70GEG@-+rljq
zp4)W5kbmpC!mB&n_l0j@lVRmnbr^Wcu=sCNTCC6*OSAzAn)U?!Xbl1_7f1t4uO(e4
z>FxzdMsmFR9qemhHbvKL;7lt_m}%1Tp%G><OHu>oBEUzz>m*GLsIFhYsBT=KFhrFI
zqJc?@pCM2Yg#cL&-6Evca#0vF$T&gzJ=~AN)CPHegYjhmPX&h)u{qAiIu}NrCu5x#
zuoyY-20bL}pt#W%%?7Q|gz3;~P){nVhdyZWtimX3o>&Vvu*`^69u&0|bO<Qwj_ATJ
nsSg;fu6(7sV#FJx>CjdW@rY!ao-NbAij5!>h9}gpXPEm9rcpJ#

diff --git a/out/production/LearningApp/com/khoalt/SingDimArray/AssignGrades.class b/out/production/LearningApp/com/khoalt/SingDimArray/AssignGrades.class
new file mode 100644
index 0000000000000000000000000000000000000000..5e478c55b140d22615254752ef48a01d2b2f76d0
GIT binary patch
literal 2221
zc$|%t-%}G;6vw|eA!G>)gakwl!Jt4xL{j@(iMD{EX@gp$sHMM_WDRRJyUgy!DQ|u7
zkLa^~=u02OPSvp;|A77%eeX=)oof5NH(SIp?Kqj-d-mRQ&-t8l&pp3AfBXbM32p)r
zMC0hu5ks#)@|JPiDB6b8C|=ySW!3_L-jd~5!D)eLes--78v5c$=;(+3l6rO956l*|
z+%^x5R@9E=7B6|06I27wG+GN91_dV0I)Ulsf=x5$v|Ae#-J3Z-XxB|A@K5FvNMbmS
zl#Vn;1kzpX2*kGJ7v1D5dk6w9HWno0K8(e&U&jF)6qu^HtzvW2HSC~RrN$Ynwdi@q
zc5%`7t%h^XGwP;Ko0hXB(bFB1?ZC2&)tccrrniv5II?j}=s1L&!0;;?0&&OuCMZiN
z=Bb=wb`R?~f+>NqmeDkqU8iOQ*Q{WZk{=k1RpOUtUkxBZ{23i@ATQ9b0=;bdZJU;3
z`StSbn%pnwIEp!X^$e%UL-fMEZq`x|n3p6)fqcGP?vk)>2uU2*@s_-SxI(ZU>GmBR
z@8Ugy!G;+unLh7BU0X<2*6@LVSk!Qm(~^b~r)3SS9dSm(N1Rq<0WIlR#u<T#<?OAL
zvdn*2DKg<JvL??7?9X>qnOzg;S$6BDz);0<%nPcRt{59OS5g(XX4q?nXUXqyu_xHH
znDv>;>lDNS^;?D{+?QYPR%MLF;=fEi!)wrPx{Dg0Pp8N!G{QoQtn<u3H85(;RbxxB
z#c`E)z41~;l{$^rt(!Lmv{KCu-(jNaw!NCUV#%0>_cG5*|9q88t{eD)XKbyS!KPdH
zhkEgK0tPnXsL4{O^HID&wVc~-(+r6_b-H5I0@vFX_-^k53l%#?&l^tNHvOrJ>o(h4
z3$KR$Uk9&jZ<$@x_a?8?dR{8b(8RJ~+f^$t*-Ds{WT%ygoL_T2lg&fJrofRfhySkU
zET1BAb1J3kQ$R1vce`vGzHj<*GzF$#E7CaFe<uE4m6zR7#v~t2guQ?lD4P+bUdk~w
zp66GQv)~*nJcQVx5J5Rq;vzogsE6_=sBrGXDlUYFe?}BNoKN0IJT>qDL-#TI0GU$e
z*TgE9GLPvVT#la3X6_<2m+kCdyb~2a{Qc+LBTP$=QRQ)lmZfzK2@J8hry+aY0M`cz
zIlyP1#0d;5q5{26Vgwg)iKpowpW-s-A@-yy*Z36Jy{_OYqgmtn03y#ZDdM;$o^nf*
ztt|{8V5l-b)6r6<@Z>HIN$x^szQF$@%s$338Nr)(1c`rtL7P%>kI>X8COA)FOp(cC
zM{rn?$*fH)3Mh&`ME*jA1d}|*E*27eOOrB)Y_t?TH7*%Or2p~xyNHdK?nLPLkIav|
zo(~dOjuB)an^YQEGGzG6DT183lQBgg1Iva4QvbT5k}Um*K0}WX$)~(nO}6roW`~M0
zwBv<Gc>5G7GWFA0?R)g5-oKYkCZuqJ!jKdeD2zzq)V<V)_jU>AX&uZ+jM4Y={*p|0
znh8IES@IT`ouk~D<9Lj^#oZgF(~wn4Hxz4(de>DX($Z(@z9oMGJ<pI9Len(jukV)g
zj7lXi_zT8w+{fZWoc#%-JL&<vsOw&8eXery1-_Kpl)mDQsm2B@<w4*UY&baZ4+NUy
Ag#Z8m

diff --git a/out/production/LearningApp/com/khoalt/SingDimArray/BubbleSort.class b/out/production/LearningApp/com/khoalt/SingDimArray/BubbleSort.class
new file mode 100644
index 0000000000000000000000000000000000000000..65a46ca8b7f7fc02f974b8f02812baab64afbb4e
GIT binary patch
literal 1294
zc$|e(+fEZv6kVq?Wy&~EC>8-xE25Snj9kP^5pNYVsh3bgVtjF0Cos^?G{e-$JOALD
zCcOA8CTi4}_^K~{i63A@UFT3mBZ+Be?{isa@3r<m=i~P`?*U9>&O{8F0o_6zEdm|O
z&O^tpI{u=4tGw)1B7v4^&-bDk0WCYU(24|F4VV`8!1@bbT3e0W8c{)mhtfs0;|2EZ
z(DS2G6uM3=pFq2Sb#uw7XU0xuR)cdH6CLO@kh0K)y#igkoDwkVa#r;jHe387W5ngf
zyd>3)eFl0g^rBB-pc2&Vm8HO`Ms|saf>*l~hR&LOxlt}x-BJ*eVBGWTl4#d<z((X%
z?NY_@eK*XT=*IyA2Q3^zMxgT_gn;S0kD@}*U_4crf=Lbo7LH(0ptaoC$&<ZT7+NrK
z495**Ees*|t86NwVzw%fh=OfB0^Rb+zdB{<Pgoeis6fo~|E%$Ksij$CN&ckl=9oZF
zc2~&If`EP{ctGmOqUXCe8?~|<-f@(eR57SH)deT?<h;44M@t?_4i^7k+C0%UNAjbN
z-MS?pJbu@SbHYVN?b-##&8oM``o-=Q1lmfGQ(3v;)D;~Ayo_R5vT|#64v9!iSE|ix
zYL<dVSaD}PNj$kjY*Z$}VfHD;tIs3yws53#%)3uJ&Y4Xw=;OIp5YIV?VS=_rEw*5i
z*4hT(6sG7~aT;fuho3T-MnBPEzB7uOFj8$Vk<`xjcbFSU4fk&%{Sy1<*JI+@k1xZo
zahMRgqXfxRno2c5W`M~Ad(g&YY1)JIgGeIF=Q55?MI%FelDlVdPAQr|o)20Q8^w9d
zkkSQ3HnxSNfs5iR_A)XrXp`(GBIERP?bo!K1CrqdZAwq;x%c{m4UFW{`WQd`{@CLu
z=#{f;G}|ll${n9y*D2)lx<>n9M?j9`!DKO#lh1;WlSzAc^?SMBN4nj($h}$0npAk5
z5+{@poxjVt#F4DyoDw2?aFwf9nvzn8Z$a0@HzdS~uZZ(cVTIo<Jf_Y9?QhY4cN4>}
TV81~6xoY}OFAdtOD)#J80f7U0

diff --git a/out/production/LearningApp/com/khoalt/SingDimArray/CountOcc.class b/out/production/LearningApp/com/khoalt/SingDimArray/CountOcc.class
new file mode 100644
index 0000000000000000000000000000000000000000..4727be0dc73e63ac96612410e5544ff69870a9d2
GIT binary patch
literal 2053
zc$|$@ZBrXn6n<{9uwmT<nv|C|frgi2NFbqBXl;Pnro~1BRD;xtFI|=^*^=yLc5kYD
z=SMhxavW#)T%4gyt^9y~^#}MrI%D<RO)6O8%ZJ>(_uO;Od7kr@=P#cg0hmKYLjXY)
zijEF+GW0w&9vQi+VQ=MDHXd?QFm%pYwj~xAf~kqME`-pfLeudE^uMW>cRaysq~$c|
zQE$n=v7Fpp*Rn-fxZJ4aLx?b3ylo5aCPjrO>4tA{*Gq12@ipgm@>0^UH<L5d*OD4~
za7IN`M+|2fVr|SZbkyaEyroJffCv(9<t5fW^s5-qaSrDhlBQG3ZC4zlDspAgxMkID
zxUR92D>w~Xte7U*v+TM=A8VRx2&<Yan}%(3H?JXqK@~$fE+ENp=9C75YV&VIQ39e+
z6*UUgh>lT=F?1Qylj+oV7}6)fHiMimwh<L4)-+-;uH#Ll7((VT%+$JnnMOv%q>d?h
z-*XJer{ysyp5qE>Bd22;m&k@6ua*tzAWB7WS;yO$Vd$?J+q~e|rXlWGqCz`Q7`7lg
zeNy*ygk_4Z=(sBLqxzPsb`%VkWs&4{s;+s4fMuVohN28`s~TiPugki7mti2)R%K$1
zSQMO1&d^=5Y`)y6ZE$zh*r<{uT5?RIx@NeRJhz03s8|Gfr1W3e&XaD<km&kS>+Q-%
z+Tyi3QCKfBFpGZlRSb8F?8n+XVbE+JU&->Q2Et`wnA=N6-AAUPD0@SOK5RBzm)oLA
zh8oOnZ9;Qqwbg4{*=e{YU$i8r@GHz&>621@({Y3+T%*3kMa9|lx;t@S!>3qR@tMr#
z=L}=V@GSe0v&~y5n+aYtOyRgxjNhIt#+G8!=pE|BD)+`pj<emU=TFo9r-!RMb>2pO
z{d9>>oHkJ~s@1Y3IE{)gi6~1_#2PdpSW;Lu?u9_~yI+$s=tbFpg{t9s+*7ehL*{?6
zQt=hT(7&rvewxY{rcMe_!%(8+M4?>=?P+Y%dV@|m`Z6g^KLLA8n*eUo+UW~b6lm3(
z3b=*a^zFhT-fKO6PEv)wg?*^e@BzA&XId#ZpU52jfT>JkAH4^NuVfP0@6fr2c;-lX
z@Jw6I1gC<TqeBc&m39Mc?~h+Ihqx$R2YuIXkweg=4$)Uf7-tc|Ai8NL^<W%P8XPgq
zlJqLwEuf#?4EQk91Z9fe-9eEoMQC`uj}LtA1(dMl6S;zAx@B0QQy9VD5m9lM^}ir9
zAvv*HynZ1AlGkkd5EH?<w33}y76#MAYB-S|%zlrqUB>nhNyHD4CBeKhw;LoTzxjgK
zsl>@vf+9Ky4MRlW0wp3z>j=h(REpL#$*0Nx44qz4(Mc`|1SJk1w#>>jJ|r2n8Yc0P
zPp?Tuc}f3lj77B<l#-AfoGmIfG9Y6x8drWqjPi6o{*-Xx0JD4OX`SEk&&Rl<KKl%r
znnW+Mgml`+)hwk^l*u#vT@#JOpdiqzlk3&LN^9K54n%%N;{HCaJ;B0H=zZ)L<8h6J
fNb6(2?$&TmYSZo$y7|IiA7F!I8tqJQY~kFW*=Wfq

diff --git a/out/production/LearningApp/com/khoalt/Test.class b/out/production/LearningApp/com/khoalt/Test.class
new file mode 100644
index 0000000000000000000000000000000000000000..0fd8a3672c1891d1ea0cae80d3eac2eb9a7014a6
GIT binary patch
literal 902
zc${rh+iuf95IvjQ=Hj$X(xw4Qae<Pgg}CKTTX+E>MG65aRV2jI#<dc+_BwLxiu?#K
zd;rh%A(cSl1NbKpvrZ6~#w+da%$b>Uc6a>!=a+8)4zQm^3~`Qxh9pu9OUL3=7><yA
z<8|-YG6ROxfi3Oe8AH5Q?{cIW3Q<rP*pAULg_M?`K^8d<O+y|F|5WLWM}g%s#B9m1
z(ux4vGn#T32A#mSgi8`QmK1-1p;DV0Qtv8;l7?lhkPt5n{x0^$x8?81G*%hP?SUBT
zr^3^B^^vE`emJ(|o}R@eT;{l<VGUOqN^|lVl0#)t`I(aGDFSl#NruvTO@odN1}?4l
zK~u%j%{0@v!La&5jCDu+A=QsUPxc#%c~iqJMav@sN2XC@SiX=T+y=)M!=mZA#>v1F
zPGB5bBVtKB_l_(ATDG*>q1&_kL(y}{Q*3#raJs^`l|6GNf`L7vw`%=YXP+QfsMjdh
z-pxBA;ll4zYH1Ek_hYMfA+&X&3kXe*ymoXB2G(TAcLHIayb{BisBFgzebahrD<h-i
zG*lIApiX_Lz8IM5M4GqBGH7MACb!PPK1c9vnp2UJ;||T*Gyn|>1~S;e?kxEO;xvGr
zui$UbkU6KTJ43Npo}jWl!TQs+k62KS>l57kgq+$|X{&hR5zjhtsG2#|d^A^}S|^Vx
t7KyD8@#|9#+{HawbJ)avJRk)X8V~V^6h9_E{boN<<=~7H_9QyV-Y;@U!;=62

diff --git a/out/production/LearningApp/com/khoalt/bai1/Ex1.class b/out/production/LearningApp/com/khoalt/bai1/Ex1.class
new file mode 100644
index 0000000000000000000000000000000000000000..c403e26bfbfe0a9af43ae2aacbc307314cbb1bda
GIT binary patch
literal 887
zc${rg+iuf95Ix&moQvrtX-j}!(r|N9s0nvS;01vcDJn=oL5QbKu+lB|x^gzC{RRGp
zKBN*zd;lMXm~nyt)%!4`oilsp?9BZ9_3a0MHrfR&AY~zKBZI8K@}c}JU0>>v`+9Kb
z4UIsyt+X=F1yWAEZy_hJ5+_ZJ^4;E0YVAdN6i~Ea+qi(m|5$n_W8(z^3rY*Dbz?w<
zZbu(YOwUA~3|a+PSmydG0u?7QrQYWXWgDwlBO&3${7d#GQu<G34i~Aur;Qg?rLGd-
zjl8IUOSo*|ij56y3X~IG3Rp*c^I7Ly#q0-$!XuKvI=5|9u|v7qJ2o9{;;wWUxoYDY
zt_$QC=_>6BtUC4cJS^oV>u?0pPKR6CAVtG4a6cV{(l_ovs;2w$xJmen@FVdoG2Q+o
z7<kcJIq)e`>V`w<_hqE`J`bkNff{pP61Z9f2a;#7?tDo49N{t=(erWwERaz=4MMx;
zX3uDFqPQ2LL;V<=hy^B)6nfz#8hWo3tId(BJx;<7>a>J>79e;H$?nq4B`?Tl8fOq+
zWB3-?Y#hwuHd%X?fIUhE^0<TM{P7p0kS5>w4(t6X@@Le=Q<O^UQ&e`R*m_2$_KwXy
zg*T?S@wdVjjg#4mymMqLRA-YmyM{%Qx)fJ#%-C@k_sAEqjr({&wJRv$As!J^4LLl<
M6Vf5@H0Eyo2EzZnj{pDw

diff --git a/out/production/LearningApp/com/khoalt/bai1/IMEICheck.class b/out/production/LearningApp/com/khoalt/bai1/IMEICheck.class
new file mode 100644
index 0000000000000000000000000000000000000000..ab1c393084d73ed238bbef1a39e1b5bedc43f12f
GIT binary patch
literal 2095
zc$|$@T~ixX7=8}<SO{AP;iIH{n6?xXSenvetD!~PP$U{C8cHqrb+TELC7a#2yJ5r&
zublCwKfvmRj5o|U+_V?LsWbfn{uBR!SH<^iQVc_I%w*2{p7VY`?|aVv`Rc_>0Jq_U
z&;g$Wzl;Ea4B>6Q!;=O#i^&K1ZB2C<g12>3cNZ9Z@x+FNPKG{DspjfNGN*FW)a)*V
z&@DlhaSlBvyySKrSF12|=qAHp))VMfGGkV2ZqBteUYQR;LRiG_V;GLNRY`1!2>mh!
zFi445HMiB-nys6!H9K*hp?kH&tFg?={Y)wrLKGJyjK~<p7(;&>BZfd#?8s*`d?R(2
z4vQ39B>0Am7%nn&n%XyRRyQ?<fq3Gyb_ka-A>oRQNxXRy2~UCWG&Hm5mOMN&LOmg4
z3ezM|OWeLoS@`3bL|RB@WL!m(q06b|ou>IvJd<e~cNW(r+>kMcw-}<TRY{gh7B}2v
zp6jzo0Y<u{sb%t}JFB&dX6x!11#d=ZHg3sy8}Bfjukf;#woH|~k94<0oa1uSbr>ew
z*|y6pig}r4jnJ1ooDDMqhFhY-cV)bXyVNn)N{i}ko9_w$5?cg78jBL{%UHtuuN&t%
z7MfgjHJcpj&Z1t_J<!sLO(JQlK)vY|Eut#(n!V2R2AxE*mdcF{ZtG&-JoLLIohlj0
zo(b1HDOI=_-l6zbyWtRcRy2K$+wQE0a!RE|;d%>yqlKTNAlxoeCjD(<(0J<NE|4^P
z>gI|3gd2u)IhU*D6<+mflkkv%QHNQYCaW<#6272|xJ3t{oK>?`ZAlj(^c)v^Rk)|2
zy=Pf2negh0=9a92(;Gw~1PxzFD2lP5;hp$5P2JqF%33qq#-uD!dn}te`D5#hG!+|8
zm$_LmG-o1fS>;-F{&d-A8LsbEwKnRlz%`z(6T{eak>-Yx(_M|;iEVnwSWI_fJhsCP
zz2LnUoiON9c*myYo)9s}8G(4(;Etm?5-f%*|Eo9&Uo(vVw<<NMp^S@klRF@OKDs6J
zD$}}5yChLYG%$4t_KcVgWM~aG4)Fo4a+CiMS)yH7!D_>p{XotnIy?LW(&OjoI;0!&
z9FfRS9mCUgjIStlTnb0_@I(pJ5m&-pwC>@%2BU<--qvbt!!vs*C_YkDR+XSQQc`{;
z91>beDxie>!V$p*XMV@Er<jWRJ$fk`@aTnT(4!GbKzV_iKpm-l^ftD4+HIeCXozxC
z=%H0YH#*TzB@WYfAwz|)(U<2j$yD^Bf-s(-4?mN}J_hj{hRDgV2hlRwuHg|L(CQ<L
zReVI8pX?U#F>wL1P9aBJP{4(CJS5tU18k5LeW36QJ|Srb*#g(#KcX;_giT4Tms|h9
z5gGc9Wz?~5%9!5gW=FpzF9D*HQ*|t4r(fRjEsTx+N(~vCyXhY!(C+<&fbZaYAKO3r
z%YSf;L4@)JM(ATWigBV7w2In>$ln0rv4u}PjY)h)nZnDo2fkMbN%)+x{=X@z4_|sC
Z#F6);9fSab?yY6Q0OW_kL=`ro{{Wc5>fitX

diff --git a/out/production/LearningApp/com/khoalt/bai1/SortArray.class b/out/production/LearningApp/com/khoalt/bai1/SortArray.class
new file mode 100644
index 0000000000000000000000000000000000000000..d9d782cd2745a49c9fd55ef60c38135d4c557e8c
GIT binary patch
literal 1227
zc${@q+fvg|6kVrDNr^$O1+<_=L<=YZQBYd(0y<Nzpi{+hcskS!MB1d2rVjYbkLZif
zzzjI*_^#jL7ckz|3FzR6583-<pM6<-?VWu2@%|Hl9A-_#pc&9D#L*zo@<P6pc3FDM
z_WaTdrxXe_<Xq1Urv<dk;6fu3Xf$A2I0ox4_u_gjbSm`n>kLX3q8rz@9|o=$7Q?`i
zm23jXc{R5ptLd@Pbj?qP^|ZI*I^I;;L<?FCv{`6Jhd}!g;R5lhdSi-A;ZWg_#^tQS
z)`>0y-4;&Zq`--iU$IwLd|3|dCFzdYML!5{1%X@_Fui(Z$q5Q>joD(0c@^4Yp%<rE
z#PzDGh4%d#_0TQb#gg<qC&-#eqtCz@3;j4N(E5*ufZ;i7VP2smUwISfaNa=1!XSoz
z^A!a|NNNI!(BJPspfj_WAN;p7#rXvb7coMtu6LN+yn=c_uEI8|#yBR>ojKBFa6v$y
z@t->a%>~zU<{}mz%cU|cZ3Vw1%L_7a)%$@_4_91*Ocnl1W|mGBsbCTQQDYGhE}uLJ
zsVFyH2Fpy@euT5C=TxekPc4)IS$yuS2{aW$Sz3J{s|T18xl;LHCC#E=4@%BmSJ{vM
z!8D>WqmM(4am!=mkCWvop*DkBgHY>Ed5Lc}wV;j<?Luru0ppYnk+A`nDXo16T)_l&
zBPMZmKUhpcryY2;1*5HL2hCb8)ndLu#}<;QEu?mEdVWKQw?DsXIqiCny1LUd-K+E@
zU3x|)^rX&1@5pPUBR!!<_MDQDVP479{D#IXpEqKZA6SgWcNk#7&8Q)T_#WCQkFiaQ
zUsDrO)O~2?uC`zRtr+J0IKQtcbYK=q+$TYg(1k^GL-KB!5fxIkPO?<j)9l{l{WV4i
zKIf68)VYaMkxf&5^Cxnhx*t#Julxq^1UGn!;U?`}FuuVQd+7WQO^9zW#P}ZKae}<{
qX98nUDj@j*>1SIQ-i5sl()iKbMpE@BqW;WioCZ5f&~iJP)XXo5#sEqH

diff --git a/out/production/LearningApp/com/khoalt/doItAgain/StopWatch.class b/out/production/LearningApp/com/khoalt/doItAgain/StopWatch.class
new file mode 100644
index 0000000000000000000000000000000000000000..36bdccb2f833a76b91bdae39f1f9ac4a9f5e4e00
GIT binary patch
literal 1328
zc$|Gxe^U}s6g^MSg>^##CDT%pGSGrb%}TS(v?MBLaCDmfTHy_@ExXL}XzC;MVf;gz
zQKx450DY*Ydl&o>QZW1D-Fwfy=bU}-*YEE?0W6@PqYD8IK?B|B5$NAFKbbk(bSk-b
z+q<%)1bP-M$5M*|fplh5Lr5U%7d4b+=ZYoMaikZ9j$RFhflG+|)us5Qu4Gl9%W?z;
z3x2|Kb8Akmp^D0rW_4bNhJKzO6&Ol)EXi#0gt&nL3=$Eyq0Tp3_blh6GK9+l1M8lw
z*OM!bl3r4|$+|K<rQ-^QHH;XzifaP#4rl?b#w(k-wwN?kC<<4I26G)Vki>O?kRv~<
zg5^jWn9f|R){(*u4L1!;u(hKlx0?I7<C?b0mEAS9R52}wYTeqFsY*Kn-9F6_(gLwI
z0n#aRw@Cw2+$zvo-!YIyP9Rc|YQ;8dby?o9s?z^ddDeT6#oiYPrt@rJ3Nr>~@qlzv
zhi0kBbNr!!M;s6P95|zs;qwM<5$Yc;H9Su`e*BGP+g6=gF1uxd_pt$Q8`W*;ZJ66O
zMPdcFWZIjiXYslf45}RlB@6#IVV)|hCU2EQ`a>uGDQ|ie>J;ygCJQazG?Xn|*rJrx
z*`^cS1}%ywVkuX28(vASTFf?bN+`>H=yRv&n1C*wZK5}wZKS707abf3JfXK7Jq1T5
zk0ADaz#`py{Gf)XbT^s>c!ni<hVdNBE$~+a{2{YHpuImp_=vncKrEIx#L(0sMz@YJ
z&g)xe>kO@rar+Q=&xTD<Q=pgr2I6!ahY-OC`ba@P(umRqieZK_OeWDBh!<G#F_T!u
zOJBn)UklU9QVmlM9$<Q}O;X~Vq+m;uz*;BlTswBS12)VjrG;%ePPQH6@i)xv`>hv!
u>p3w>g<}Mm`UhaT9WYLXDFS3q*(GT%|3ajU2+F-vM3dnJ-Sa-{*M9(cbN|`^

